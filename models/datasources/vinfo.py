from models.Model_Base import Base
from sqlalchemy import Column, Integer,BIGINT, Float, String, DATETIME, TIMESTAMP, func, Boolean, BLOB


class VInfo(Base):
    __tablename__ = 'ds_vinfo'

    vm = Column(String(100))
    powerstate = Column(String(100))
    template = Column(String(100))
    config_status = Column(String(100))
    dns_name = Column(String(100))
    connection_state = Column(String(100))
    guest_state = Column(String(100))
    heartbeat = Column(String(100))
    consolidation_needed = Column(String(100))
    poweron = Column(DATETIME)
    suspend_time = Column(DATETIME)
    creation_date = Column(DATETIME)
    change_version = Column(DATETIME)
    cpus = Column(Integer)
    memory = Column(Integer)
    nics = Column(Integer)
    disks = Column(Integer)
    min_required_evc_mode_key_ = Column(String(100))
    latency_sensitivity = Column(String(100))
    enableuuid = Column(Boolean)
    cbt = Column(Boolean)
    primary_ip_address = Column(String(100))
    network_1 = Column(String(100))
    network_2 = Column(String(100))
    network_3 = Column(String(100))
    network_4 = Column(String(100))
    num_monitors = Column(Integer)
    video_ram_kb = Column(Integer)
    resource_pool = Column(Integer)
    folder = Column(String(200))
    vapp = Column(String(200))
    das_protection = Column(Boolean)
    ft_state = Column(Integer)
    ft_latency = Column(Integer)
    ft_bandwidth = Column(Integer)
    ft_sec_latency = Column(Integer)
    provisioned_mb = Column(Integer)
    in_use_mb = Column(Integer)
    unshared_mb = Column(Integer)
    ha_restart_priority = Column(String(100))
    ha_isolation_response = Column(String(100))
    ha_vm_monitoring = Column(String(100))
    cluster_rule = Column(String(100))
    cluster_rule_name = Column(String(100))
    boot_required = Column(Boolean)
    boot_delay = Column(Integer)
    boot_retry_delay = Column(Integer)
    boot_retry_enabled = Column(Boolean)
    boot_bios_setup = Column(Boolean)
    firmware = Column(String(100))
    hw_version = Column(Integer)
    hw_upgrade_status = Column(String(100))
    hw_upgrade_policy = Column(String(100))
    hw_target = Column(String(100))
    path = Column(String(300))
    log_directory = Column(String(300))
    snapshot_directory = Column(String(300))
    suspend_directory = Column(String(300))
    annotation = Column(BLOB)
    datacenter = Column(String(300))
    cluster = Column(String(300))
    host = Column(String(300))
    os_according_to_the_configuration_file = Column(String(300))
    os_according_to_the_vmware_tools = Column(String(300))
    vm_id = Column(String(300))
    vm_uuid = Column(String(300), primary_key=True, )
    vi_sdk_server_type = Column(String(300))
    vi_sdk_api_version = Column(String(300))
    account = Column(String(300))
    vi_sdk_server = Column(String(300))
    vi_sdk_uuid = Column(String(300))

    def __repr__(self):
        return "vInfo(vm_uuid='%s')" % (self.vm_uuid)
